{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "src/asteroids.js",
    "src/bullet.js",
    "src/draw.js",
    "src/handleInput.js",
    "src/index.js",
    "src/ship.js",
    "src/vectors.js",
    "src/world.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "import { random2D } from \"./vectors\";\nconst [minVelocity, maxVelocity] = [1, 5];\nimport { circle, canvas, ctx } from \"./draw\";\n\nclass Asteroid {\n\tconstructor(position, size, direction, velocity) {\n\t\tthis.position = position;\n\t\tthis.size = size;\n\t\tthis.direction = direction;\n\t\tthis.velocity = velocity;\n\t}\n\tdraw() {\n\t\tctx.fillStyle = \"rgba(0,0,0,0)\";\n\t\tctx.strokeStyle = \"rgb(200,200,200)\";\n\t\tcircle(this.position.x, this.position.y, this.radius());\n\t}\n\n\tupdate(dt) {\n\t\tthis.position.add(this.direction.copy().mult(dt).limit(this.velocity));\n\t\tthis.bounds();\n\t}\n\n\tbounds() {\n\t\tthis.position.x = (this.position.x + canvas.width) % canvas.width;\n\t\tthis.position.y = (this.position.y + canvas.height) % canvas.height;\n\t}\n\n\tradius() {\n\t\tswitch (this.size) {\n\t\t\tcase 3:\n\t\t\t\treturn 40;\n\t\t\tcase 2:\n\t\t\t\treturn 30;\n\t\t\tcase 1:\n\t\t\t\treturn 15;\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.isDead = true;\n\t}\n}\n\nexport default class AsteroidGenerator {\n\tconstructor() {\n\t\tthis.asteroids = [];\n\t}\n\tnewAsteroid(size, position) {\n\t\tif (typeof position === \"undefined\") {\n\t\t\tposition = random2D().setMag(Math.random() * canvas.width * 0.3);\n\t\t}\n\t\tlet direction = random2D();\n\t\tif (typeof size === \"undefined\") {\n\t\t\tsize = Math.floor(Math.random() * Math.floor(max));\n\t\t}\n\t\tlet velocity =\n\t\t\tMath.random() * (maxVelocity - minVelocity) + minVelocity;\n\t\tthis.asteroids.push(new Asteroid(position, size, direction, velocity));\n\t}\n\n\tupdate(dt) {\n\t\tthis.cleanup();\n\t\tfor (let a of this.asteroids) {\n\t\t\ta.update(dt);\n\t\t}\n\t}\n\tcleanup() {\n\t\tthis.asteroids = this.asteroids.filter((a) => !a.isDead && a.size > 0);\n\t}\n\tdraw() {\n\t\tfor (let a of this.asteroids) {\n\t\t\ta.draw();\n\t\t}\n\t}\n\tcollide(bullets, updateScore) {\n\t\tfor (let a of this.asteroids) {\n\t\t\tfor (let b of bullets) {\n\t\t\t\tif (a.radius() > a.position.dist(b.position)) {\n\t\t\t\t\tb.destroy();\n\t\t\t\t\ta.destroy();\n\t\t\t\t\tupdateScore();\n\t\t\t\t\tthis.newAsteroid(a.size - 1, a.position.copy());\n\t\t\t\t\tthis.newAsteroid(a.size - 1, a.position.copy());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgenerate(complexity) {\n\t\tlet n = Math.round((complexity * 5) ** 0.6);\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tthis.newAsteroid(3);\n\t\t}\n\t}\n}\n",
    "import { circle, canvas, ctx } from \"./draw\";\nconst velocity = 6;\n\nexport default class Bullet {\n\tconstructor(position, direction) {\n\t\tthis.position = position;\n\t\tthis.direction = direction.setMag(velocity);\n\t\tthis.ttl = canvas.width;\n\t}\n\tupdate(dt) {\n\t\tlet vector = this.direction.copy().mult(dt);\n\t\tthis.position.add(vector);\n\t\tthis.ttl -= vector.mag();\n\t}\n\tdraw() {\n\t\tctx.fillStyle = \"rgb(200,200,200)\";\n\t\tcircle(this.position.x, this.position.y, 4);\n\t\tthis.bounds();\n\t}\n\tbounds() {\n\t\tthis.position.x = (this.position.x + canvas.width) % canvas.width;\n\t\tthis.position.y = (this.position.y + canvas.height) % canvas.height;\n\t}\n\tdestroy() {\n\t\tthis.isDead = true;\n\t}\n}\n",
    "export const canvas = document.getElementById(\"canvas\");\nexport const ctx = canvas.getContext(\"2d\")\n\nexport const circle = (centerX, centerY, radius) => {\n\tctx.beginPath();\n\tctx.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);\n\tctx.fill();\n\tctx.stroke();\n};\nexport const drawTriangle = (base, head) => {\n\tlet height = head.mag();\n\tlet direction = head.heading();\n\tlet width = 20;\n\tctx.translate(base.x, base.y);\n\tctx.rotate(direction - Math.PI / 2);\n\tctx.beginPath();\n\tctx.moveTo(-width / 2, 0);\n\tctx.lineTo(width / 2, 0);\n\tctx.lineTo(0, height);\n\tctx.rotate(-direction + Math.PI / 2);\n\tctx.translate(-base.x, -base.y);\n\tctx.stroke();\n\tctx.fill();\n};\n",
    "export const keyIsDown = (() => {\n    const state = {};\n    window.addEventListener('keyup', (e) => state[e.code] = false);\n    window.addEventListener('keydown', (e) => state[e.code] = true);\n\n    return (code) => state.hasOwnProperty(code) && state[code] || false;\n})();",
    "import World from \"./world.js\";\r\nimport Ship from \"./ship.js\";\r\n\r\nimport { Vector } from \"./vectors\";\r\nimport { keyIsDown } from \"./handleInput\";\r\nexport default class Game {\r\n\tconstructor() {\r\n\t\tthis.container = document.getElementById(\"content\");\r\n\t\tthis.canvas = document.getElementById(\"canvas\");\r\n\t\tthis.ctx = this.canvas.getContext(\"2d\");\r\n\r\n\t\tthis.prevUpdateTime = 0;\r\n\t\tthis.height = 0;\r\n\t\tthis.width = 0;\r\n\r\n\t\tthis.init();\r\n\t}\r\n\r\n\tinit() {\r\n\t\twindow.addEventListener(\"resize\", (x) => this.onResize());\r\n\t\tthis.onResize();\r\n\r\n\t\tthis.world = new World(this.width, this.height);\r\n\t\tthis.ship = new Ship(\r\n\t\t\tnew Vector(this.width / 2, this.height / 2),\r\n\t\t\tthis.world\r\n\t\t);\r\n\r\n\t\trequestAnimationFrame((time) => this.update(time));\r\n\t}\r\n\r\n\tdraw() {\r\n\t\tthis.world.draw();\r\n\t\tthis.ship.draw();\r\n\t}\r\n\tonResize() {\r\n\t\tthis.width = this.container.clientWidth;\r\n\t\tthis.height = this.container.clientHeight;\r\n\r\n\t\tthis.canvas.width = this.width;\r\n\t\tthis.canvas.height = this.height;\r\n\t}\r\n\r\n\tupdate(time) {\r\n\t\tthis.handleKeys();\r\n\t\tconst dt = (time - this.prevUpdateTime) / 16;\r\n\t\tthis.prevUpdateTime = time;\r\n\t\tthis.ctx.fillStyle = \"rgb(20, 20, 20)\";\r\n\t\tthis.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n\t\tif (this.ship.isDead === false) {\r\n\t\t\tthis.ship.update(dt);\r\n\t\t\tthis.world.update(dt);\r\n\r\n\t\t\tthis.draw();\r\n\t\t} else {\r\n\t\t\tthis.restartScreen();\r\n\t\t}\r\n\r\n\t\trequestAnimationFrame((time) => this.update(time));\r\n\t}\r\n\thandleKeys() {\r\n\t\tif (keyIsDown(\"Space\")) {\r\n\t\t\tthis.ship.boost();\r\n\t\t}\r\n\t\tif (keyIsDown(\"KeyX\")) {\r\n\t\t\tthis.ship.shoot();\r\n\t\t}\r\n\r\n\t\tif (keyIsDown(\"ArrowLeft\")) {\r\n\t\t\t//rotate counterclock\r\n\t\t\tthis.ship.rotate(-0.05);\r\n\t\t} else if (keyIsDown(\"ArrowRight\")) {\r\n\t\t\t//rotate clockwise\r\n\t\t\tthis.ship.rotate(0.05);\r\n\t\t}\r\n\r\n\t\tif (keyIsDown(\"KeyR\")) {\r\n\t\t\tthis.restart();\r\n\t\t}\r\n\t}\r\n\trestartScreen() {\r\n\t\tthis.ctx.fillStyle = \"rgb(200,200,200)\";\r\n\t\tthis.ctx.font = \"32px monospace\";\r\n\t\tthis.ctx.textAlign = \"center\";\r\n\t\tthis.ctx.fillText(\r\n\t\t\t\"score: \" + this.world.score,\r\n\t\t\tthis.width * 0.5,\r\n\t\t\tthis.height * 0.2\r\n\t\t);\r\n\t\tthis.ctx.fillText(\"r to restart\", this.width * 0.5, this.height * 0.5);\r\n\t\tthis.ctx.fillText(\r\n\t\t\t\"x to shoot,\\n space to boost, \\nleft right to rotate\",\r\n\t\t\tthis.width * 0.5,\r\n\t\t\tthis.height * 0.7\r\n\t\t);\r\n\t}\r\n\trestart() {\r\n\t\tthis.world.init();\r\n\t\tthis.ship = new Ship(\r\n\t\t\tnew Vector(this.width / 2, this.height / 2),\r\n\t\t\tthis.world\r\n\t\t);\r\n\t}\r\n}\r\n\r\nnew Game();\r\n",
    "import { Vector } from \"./vectors\";\nimport { drawTriangle, circle, canvas, ctx } from \"./draw\";\n\nexport default class Ship {\n\tconstructor(position, world) {\n\t\tthis.position = position;\n\t\tthis.acceleration = new Vector(0, 0);\n\t\tthis.velocity = new Vector(0, 0);\n\t\tthis.direction = new Vector(20, 0);\n\t\tthis.HITBOX_RADIUS = 3;\n\t\tthis.world = world;\n\t\tthis.isDead = false;\n\t}\n\tdraw() {\n\t\tctx.fillStyle = \"rgb(200,200,200)\";\n\t\tdrawTriangle(this.position.copy(), this.direction.copy());\n\t\tcircle(this.position.x, this.position.y, this.HITBOX_RADIUS);\n\t}\n\tupdate(dt) {\n\t\tthis.velocity.add(this.acceleration);\n\t\tthis.acceleration.mult(0.3);\n\t\tthis.velocity.mult(0.99);\n\t\tthis.velocity.limit(5);\n\t\tthis.position.add(this.velocity.copy().mult(dt));\n\t\tthis.bounds();\n\t\tthis.detectCollision();\n\t}\n\n\tbounds() {\n\t\tthis.position.x = (this.position.x + canvas.width) % canvas.width;\n\t\tthis.position.y = (this.position.y + canvas.height) % canvas.height;\n\t}\n\n\tboost() {\n\t\tthis.acceleration.add(this.direction.copy().setMag(0.05));\n\t\tthis.acceleration.limit(3);\n\t}\n\trotate(angle) {\n\t\tif (angle) {\n\t\t\tthis.direction.rotate(angle);\n\t\t}\n\t}\n\tshoot() {\n\t\tthis.world.newBullet(this.position.copy(), this.direction.copy());\n\t}\n\n\tdetectCollision() {\n\t\tfor (let a of this.world.asteroidGen.asteroids) {\n\t\t\tif (\n\t\t\t\tthis.HITBOX_RADIUS >\n\t\t\t\tthis.position.dist(a.position) - a.radius()\n\t\t\t) {\n\t\t\t\tthis.destroy();\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\t\tthis.isDead = true;\n\t}\n}\n",
    "export class Vector {\n\tconstructor(x, y) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\tadd(v) {\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t}\n\n\tcopy() {\n\t\treturn new Vector(this.x, this.y);\n\t}\n\n\tmult(s) {\n\t\tthis.x *= s;\n\t\tthis.y *= s;\n\t\treturn this;\n\t}\n\n\tmag() {\n\t\treturn Math.sqrt(this.x ** 2 + this.y ** 2);\n\t}\n\n\tlimit(s) {\n\t\tif (this.mag > s) this.setMag(s);\n\t\treturn this;\n\t}\n\n\tsetMag(s) {\n\t\treturn this.normalize().mult(s);\n\t}\n\n\tnormalize() {\n\t\tconst len = this.mag();\n\t\tif (len !== 0) this.mult(1 / len);\n\t\treturn this;\n\t}\n\trotate(rad) {\n\t\tlet heading = this.heading() + rad;\n\t\tlet mag = this.mag();\n\t\tthis.x = Math.cos(heading) * mag;\n\t\tthis.y = Math.sin(heading) * mag;\n\t\treturn this;\n\t}\n\theading() {\n\t\treturn Math.atan2(this.y, this.x);\n\t}\n\n\tsub(v) {\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\treturn this;\n\t}\n\n\tdist(v) {\n\t\treturn v.copy().sub(this).mag();\n\t}\n}\n\nexport const random2D = () => {\n\tlet a = Math.random() * Math.PI * 2;\n\treturn new Vector(1, 0).rotate(a);\n};\n",
    "const newBulletCooldown = 20;\nimport AsteroidGenerator from \"./asteroids\";\nimport Bullet from \"./bullet\";\nimport { canvas, ctx } from \"./draw\";\n\nexport default class World {\n\tconstructor() {\n\t\tthis.complexity = 1;\n\t\tthis.bullets = [];\n\t\tthis.bulletCoolDown = 0;\n\t\tthis.asteroidGen = new AsteroidGenerator();\n\t\tthis.score = 0;\n\t\tthis.updateScore = () => {\n\t\t\tthis.score += 20;\n\t\t};\n\t}\n\n\tupdate(dt) {\n\t\tfor (let p of this.bullets) {\n\t\t\tp.update(dt);\n\t\t\tthis.removeOldBullets();\n\t\t}\n\t\tthis.bulletCoolDown -= 1;\n\n\t\tthis.asteroidGen.collide(this.bullets, this.updateScore);\n\t\tthis.asteroidGen.update(dt);\n\n\t\tif (this.asteroidGen.asteroids.length == 0) {\n\t\t\tthis.complexity += 1;\n\t\t\tthis.asteroidGen.generate(this.complexity);\n\t\t}\n\t}\n\n\tremoveOldBullets() {\n\t\tthis.bullets = this.bullets.filter((p) => p.ttl > 0 && !p.isDead);\n\t}\n\tdraw() {\n\t\tctx.fillStyle = \"rgb(200,200,200)\";\n\t\tctx.textAlign = \"center\";\n\t\tctx.font = \"48px monospace\";\n\t\tctx.fillText(\"score: \" + this.score, canvas.width * 0.5, 50);\n\t\tfor (let p of this.bullets) {\n\t\t\tp.draw();\n\t\t}\n\t\tthis.asteroidGen.draw();\n\t}\n\n\tnewBullet(pos, dir) {\n\t\tif (this.bulletCoolDown <= 0) {\n\t\t\tthis.bullets.push(new Bullet(pos, dir));\n\t\t\tthis.bulletCoolDown = newBulletCooldown;\n\t\t}\n\t}\n\n\tinit() {\n\t\tthis.score = 0;\n\t\tthis.complexity = 1;\n\t\tthis.asteroidGen.asteroids = [];\n\t\tthis.bullets = [];\n\t\tthis.asteroidGen.generate(this.complexity);\n\t}\n}\n"
  ]
}